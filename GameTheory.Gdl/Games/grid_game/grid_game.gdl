;;Rollen

(role playerx)
(role playery)

;;Init
(init(isat playerx 4 1))
(init(isat playery 4 1))

(init (cell 1 1))
(init (cell 1 2))
(init (cell 1 3))
(init (cell 1 4))
(init (cell 1 5))
(init (cell 1 6))
(init (cell 1 7))
(init (cell 2 1))
(init (cell 2 2))
(init (cell 2 3))
(init (cell 2 4))
(init (cell 2 5))
(init (cell 2 6))
(init (cell 2 7))
(init (cell 3 1))
(init (cell 3 2))
(init (cell 3 3))
(init (cell 3 4))
(init (cell 3 5))
(init (cell 3 6))
(init (cell 3 7))
(init (cell 4 1))
(init (cell 4 2))
(init (cell 4 3))
(init (cell 4 4))
(init (cell 4 5))
(init (cell 4 6))
(init (cell 4 7))
(init (cell 5 1))
(init (cell 5 2))
(init (cell 5 3))
(init (cell 5 4))
(init (cell 5 5))
(init (cell 5 6))
(init (cell 5 7))
(init (cell 6 1))
(init (cell 6 2))
(init (cell 6 3))
(init (cell 6 4))
(init (cell 6 5))
(init (cell 6 6))
(init (cell 6 7))
(init (cell 7 1))
(init (cell 7 2))
(init (cell 7 3))
(init (cell 7 4))
(init (cell 7 5))
(init (cell 7 6))
(init (cell 7 7))

(init (control playerx))
(init (control playery))

(init (nachf 0 1))
(init (nachf 1 2))
(init (nachf 2 3))
(init (nachf 3 4))
(init (nachf 4 5))
(init (nachf 5 6))
(init (nachf 6 7))
(init (nachf 7 8))

(init (step 1))


;;Legal moves

(<= (legal ?player (walk ?action))
	(actions ?action)
	(true (isat ?player ?x ?y))
	(canmove ?x ?y ?action)
)

(<= (canmove ?x ?y gonorth)
	(true (nachf ?yminus ?y))
	(true (cell ?x ?yminus))
)

(<= (canmove ?x ?y gosouth)
	(true (nachf ?y ?yplus))
	(true (cell ?x ?yplus))
)

(<= (canmove ?x ?y goeast)
	(true (nachf ?x ?xplus))
	(true (cell ?xplus ?y))
)

(<= (canmove ?x ?y gowest)
	(true (nachf ?xminus ?x))
	(true (cell ?xminus ?y))
)


;;Actions

(actions gonorth)
(actions gowest)
(actions goeast)
(actions gosouth)


;;Update Rules
(<= (next (step ?step2))
	(true (step ?step1))
	(succ ?step1 ?step2)
)

(<= (next (isat ?player ?x ?y))
	(does ?player (walk ?direction))
	(actions ?direction)
	(true (isat ?player ?xc ?yc))
	(moveto ?xc ?yc ?direction ?x ?y)
	(true (step ?step1))
	(succ ?step1 ?step2)
)

(<= (next (cell ?x ?y))
	(true (cell ?x ?y))
	(true (step ?step1))
	(succ ?step1 ?step2)
)

(<= (next (nachf ?x ?y))
	(true (nachf ?x ?y))
	(true (step ?step1))
	(succ ?step1 ?step2)
)

(<= (next (control ?player))
	(true (control ?player))
	(true (step ?step1))
	(succ ?step1 ?step2)
)

(<= (moveto ?x ?y gonorth ?x ?yminus)
	(true (nachf ?yminus ?y))
	(true (cell ?x ?yminus))
)

(<= (moveto ?x ?y gosouth ?x ?yplus)
	(true (nachf ?y ?yplus))
	(true (cell ?x ?yplus))
)

(<= (moveto ?x ?y goeast ?xplus ?y)
	(true (nachf ?x ?xplus))
	(true (cell ?xplus ?y))
)

(<= (moveto ?x ?y gowest ?xminus ?y)
	(true (nachf ?xminus ?x))
	(true (cell ?xminus ?y))
)

;; Terminal Conditions 

(<= terminal 
	(true (isat ?player 4 7))
)

(<= terminal
	(true (step 40))
)

;; Scoring
(<= (goal playerx 100)
	(true (isat playerx 4 7))
	(not (true (isat playery 4 7)))
)

(<= (goal playery 100)
	(true (isat playery 4 7))
	(not (true (isat playerx 4 7)))
)

(<= (goal ?player 50)
        (role ?player)
	(true (isat playery 4 7))
	(true (isat playerx 4 7))
)

(<= (goal ?player 0)
        (role ?player)
	(not (true (isat ?player 4 7)))
)

;;Successors
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)
(succ 12 13)
(succ 13 14)
(succ 14 15)
(succ 15 16)
(succ 16 17)
(succ 17 18)
(succ 18 19)
(succ 19 20)
(succ 20 21)
(succ 21 22)
(succ 22 23)
(succ 23 24)
(succ 24 25)
(succ 25 26)
(succ 26 27)
(succ 27 28)
(succ 28 29)
(succ 29 30)
(succ 30 31)
(succ 31 32)
(succ 32 33)
(succ 33 34)
(succ 34 35)
(succ 35 36)
(succ 36 37)
(succ 37 38)
(succ 38 39)
(succ 39 40)