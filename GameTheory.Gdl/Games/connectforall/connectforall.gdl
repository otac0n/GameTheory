;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Connectforall
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Components
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (role red)
  (role black)
 
  (<= (base (cell ?m ?n ?r ?p)) (index ?m) (index ?n) (role ?r) (piece ?p))

  (<= (base (capture ?r 0)) (role ?r))
  (<= (base (capture ?r ?n)) (role ?r) (captureadd ?m ?n))

  (<= (base (control ?r)) (role ?r))

  (<= (base (step ?m)) (stepcount ?m ?n))
  (base (step 40))

(<= (base (cell2 ?x ?y ?p)) (x ?x) (y ?y) (role ?p))

  (<= (input ?r (move ?x1 ?y1 ?x2 ?y2))
      (role ?r)
      (forward ?x1 ?y1 ?x2 ?y2 ?r))

  (<= (input ?r (move ?x1 ?y1 ?x2 ?y2))
      (role ?r)
      (pawndiagonal ?x1 ?y1 ?x2 ?y2 ?r))

  (<= (input ?r (move ?x1 ?y1 ?x2 ?y2))
      (role ?r)
      (ell ?x1 ?y1 ?x2 ?y2))

(<= (input ?p (drop ?x)) (role ?p) (x ?x))

 (<= (input ?r noop) (role ?r))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (init (cell 1 1 red pawn))
  (init (cell 1 2 red knight))
  (init (cell 1 3 red pawn))
  (init (cell 1 4 red knight))
  (init (cell 1 5 red pawn))
  (init (cell 1 6 red knight))
  (init (cell 6 1 black knight))
  (init (cell 6 2 black pawn))
  (init (cell 6 3 black knight))
  (init (cell 6 4 black pawn))
  (init (cell 6 5 black knight))
  (init (cell 6 6 black pawn))

  (init (capture red 6))
  (init (capture black 6))

  (init (control red))

  (init (step 1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; legal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   
  (<= (legal ?player ?move)
      (legal2 ?player ?move))

  (<= (legal ?player noop)
      (role ?player)
      (not (true (control ?player))))

(<= (legal red (drop ?x))
	(true (control red))
	(columnOpen ?x))
(<= (legal black (drop ?x))
	(true (control black))
	(columnOpen ?x))

(<= (legal2 ?player (move ?x1 ?y1 ?x2 ?y2))
      (role ?player)
      (true (control ?player))
      (true (cell ?x1 ?y1 ?player pawn))
      (forward ?x1 ?y1 ?x2 ?y2 ?player)
      (onboard ?x2 ?y2)
      (opencell ?x2 ?y2))

  (<= (legal2 ?player (move ?x1 ?y1 ?x2 ?y2))
      (role ?player)
      (true (control ?player))
      (true (cell ?x1 ?y1 ?player pawn))
      (pawndiagonal ?x1 ?y1 ?x2 ?y2 ?player)
      (onboard ?x2 ?y2)
      (true (cell ?x2 ?y2 ?player2 ?p))
      (distinct ?player ?player2))

  (<= (legal2 ?player (move ?x1 ?y1 ?x2 ?y2))
      (role ?player)
      (true (control ?player))
      (true (cell ?x1 ?y1 ?player knight))
      (onboard ?x2 ?y2)
      (ell ?x1 ?y1 ?x2 ?y2)
      (opencell ?x2 ?y2))

  (<= (legal2 ?player (move ?x1 ?y1 ?x2 ?y2))
      (role ?player)
      (true (control ?player))
      (true (cell ?x1 ?y1 ?player knight))
      (onboard ?x2 ?y2)
      (ell ?x1 ?y1 ?x2 ?y2)
      (true (cell ?x2 ?y2 ?player2 ?p))
      (distinct ?player ?player2))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; next
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= (next (cell ?x2 ?y2 ?player ?p))
      (true (cell ?x1 ?y1 ?player ?p))
      (does ?player (move ?x1 ?y1 ?x2 ?y2)))

  (<= (next (cell ?x ?y ?player ?p))
      (true (cell ?x ?y ?player ?p))
      (not (camefrom ?x ?y))
      (not (wentto ?x ?y)))

 (<= (next (capture ?player ?count))
(true (control ?player))
(true (capture ?player ?count)))

  (<= (next (capture ?player ?count))
(true (control ?player2))
(true (capture ?player ?count))
 (distinct ?player ?player2)
 (not (captured ?player2)))

;Dustin
  (<= (next (capture ?player2 ?count2))
      (true (capture ?player2 ?count1))
      (role ?player) 
      (distinct ?player ?player2)
      (captured ?player)
      (captureadd ?count2 ?count1))

  (<= (next (control ?p2))
      (true (control ?p1))
      (rotation ?p1 ?p2))

  (<= (next (step ?t2))
      (true (step ?t1))
      (stepcount ?t1 ?t2))

(<= (next (cell2 ?x 1 ?player))
	(does ?player (drop ?x))
 	(columnEmpty ?x))
(<= (next (cell2 ?x ?y2 ?player))
	(does ?player (drop ?x))
	(cell2Open ?x ?y2)
	(succ ?y1 ?y2)
	(not (cell2Open ?x ?y1)))
(<= (next (cell2 ?x ?y ?player))
	(true (cell2 ?x ?y ?player)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; goal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (goal ?player 50)
    (role ?player)
    (true (step 40)))

  (<= (goal ?player 100)
     (not (true (step 40)))
      (true (capture ?player ?count))
     (true (capture ?player2 ?count2))
     (distinct ?player ?player2)
      (greater ?count ?count2))

 (<= (goal ?player 0)
      (not (true (step 40)))
     (true (capture ?player ?count))
     (true (capture ?player2 ?count2))
     (distinct ?player ?player2)
      (greater ?count2 ?count))

 (<= (goal ?player 5)
     (not (true (step 40)))
      (true (capture ?player ?count))
     (true (capture ?player2 ?count2))
     (distinct ?player ?player2)
      (not (distinct ?count ?count2)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; terminal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(<= terminal (line red))
(<= terminal (line black))
(<= terminal (not boardOpen))
(<= terminal (true (step 40)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Views
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


  (<= (forward ?x1 ?y ?x2 ?y red)
      (add 1 ?x1 ?x2)
      (index ?y))

  (<= (forward ?x1 ?y ?x2 ?y black)
      (add 1 ?x2 ?x1)
      (index ?y))


  (<= (pawndiagonal ?x1 ?y1 ?x2 ?y2 red)
      (add 1 ?x1 ?x2)
      (add 1 ?y1 ?y2))

  (<= (pawndiagonal ?x1 ?y1 ?x2 ?y2 red)
      (add 1 ?x1 ?x2)
      (add 1 ?y2 ?y1))

  (<= (pawndiagonal ?x1 ?y1 ?x2 ?y2 black)
      (add 1 ?x2 ?x1)
      (add 1 ?y1 ?y2))

  (<= (pawndiagonal ?x1 ?y1 ?x2 ?y2 black)
      (add 1 ?x2 ?x1)
      (add 1 ?y2 ?y1))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 2 ?x1 ?x2)
      (add 1 ?y1 ?y2))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 2 ?x1 ?x2)
      (add 1 ?y2 ?y1))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 2 ?x2 ?x1)
      (add 1 ?y1 ?y2))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 2 ?x2 ?x1)
      (add 1 ?y2 ?y1))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 1 ?x1 ?x2)
      (add 2 ?y1 ?y2))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 1 ?x1 ?x2)
      (add 2 ?y2 ?y1))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 1 ?x2 ?x1)
      (add 2 ?y1 ?y2))

  (<= (ell ?x1 ?y1 ?x2 ?y2)
      (add 1 ?x2 ?x1)
      (add 2 ?y2 ?y1))


  (<= (opencell ?x ?y)
      (onboard ?x ?y)
      (not (true (cell ?x ?y red pawn)))   
      (not (true (cell ?x ?y red knight)))  
      (not (true (cell ?x ?y black pawn)))
      (not (true (cell ?x ?y black knight))))

  (<= (onboard ?x ?y)
      (index ?x)
      (index ?y))

  (<= (camefrom ?x1 ?y1) (does ?player (move ?x1 ?y1 ?x2 ?y2)))
  (<= (wentto ?x2 ?y2) (does ?player (move ?x1 ?y1 ?x2 ?y2)))

  (<= (captured ?player)
      (true (control ?player))
      (wentto ?x ?y)
      (true (cell ?x ?y ?anyplayer ?p)))

(<= (cell2Open ?x ?y)
	(x ?x)
	(y ?y)
	(not (true (cell2 ?x ?y red)))
	(not (true (cell2 ?x ?y black))))
(<= (columnOpen ?x)
	(cell2Open ?x 6))
(<= (columnEmpty ?x)
	(cell2Open ?x 1))
(<= boardOpen
	(x ?x)
	(columnOpen ?x))
(<= (line ?player)

	(true (cell2 ?x1 ?y ?player))
	(succ ?x1 ?x2)	(succ ?x2 ?x3)
	(true (cell2 ?x2 ?y ?player))
	(true (cell2 ?x3 ?y ?player)))
(<= (line ?player)
	(true (cell2 ?x ?y1 ?player))
	(succ ?y1 ?y2)
	(succ ?y2 ?y3)
    (true (cell2 ?x ?y2 ?player))
	(true (cell2 ?x ?y3 ?player)))
(<= (line ?player)
	(true (cell2 ?x1 ?y1 ?player))
	(succ ?x1 ?x2)
	(succ ?x2 ?x3)
	(succ ?y1 ?y2)
	(succ ?y2 ?y3)
	(true (cell2 ?x2 ?y2 ?player))
	(true (cell2 ?x3 ?y3 ?player)))
(<= (line ?player)
	(true (cell2 ?x1 ?y4 ?player))
	(succ ?x1 ?x2)
	(succ ?x2 ?x3)
	(succ ?y3 ?y4)
	(succ ?y2 ?y3)
	(true (cell2 ?x2 ?y3 ?player))
	(true (cell2 ?x3 ?y2 ?player)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Data
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (piece pawn)
  (piece knight)

  (index 1)
  (index 2)
  (index 3)
  (index 4)
  (index 5)
  (index 6)

  (add 1 1 2)
  (add 1 2 3)
  (add 1 3 4)
  (add 1 4 5)
  (add 1 5 6)
  (add 2 1 3)
  (add 2 2 4)
  (add 2 3 5)
  (add 2 4 6)

  (rotation red black)
  (rotation black red)

  (stepcount 1 2)
  (stepcount 2 3)
  (stepcount 3 4)
  (stepcount 4 5)
  (stepcount 5 6)
  (stepcount 6 7)
  (stepcount 7 8)
  (stepcount 8 9)
  (stepcount 9 10)
  (stepcount 10 11)
  (stepcount 11 12)
  (stepcount 12 13)
  (stepcount 13 14)
  (stepcount 14 15)
  (stepcount 15 16)
  (stepcount 16 17)
  (stepcount 17 18)
  (stepcount 18 19)
  (stepcount 19 20)
  (stepcount 20 21)
  (stepcount 21 22)
  (stepcount 22 23)
  (stepcount 23 24)
  (stepcount 24 25)
  (stepcount 25 26)
  (stepcount 26 27)
  (stepcount 27 28)
  (stepcount 28 29)
  (stepcount 29 30)
  (stepcount 30 31)
  (stepcount 31 32)
  (stepcount 32 33)
  (stepcount 33 34)
  (stepcount 34 35)
  (stepcount 35 36)
  (stepcount 36 37)
  (stepcount 37 38)
  (stepcount 38 39)
  (stepcount 39 40)

  (captureadd 0 1)
  (captureadd 1 2)
  (captureadd 2 3)
  (captureadd 3 4)
  (captureadd 4 5)
  (captureadd 5 6)

  (scoremap 0 0)
  (scoremap 1 10)
  (scoremap 2 20)
  (scoremap 3 30)
  (scoremap 4 40)
  (scoremap 5 50)
  (scoremap 6 60)
  (scoremap 7 70)
  (scoremap 8 80)
  (scoremap 9 90)
  (scoremap 10 100)

(greater 1 0)
(greater 2 0)
(greater 3 0)
(greater 4 0)
(greater 5 0)
(greater 6 0)
(greater 7 0)
(greater 8 0)
(greater 9 0)
(greater 10 0)
(greater 11 0)
(greater 12 0)
(greater 13 0)
(greater 14 0)
(greater 15 0)
(greater 16 0)
(greater 17 0)
(greater 18 0)
(greater 19 0)
(greater 20 0)
(greater 2 1)
(greater 3 1)
(greater 4 1)
(greater 5 1)
(greater 6 1)
(greater 7 1)
(greater 8 1)
(greater 9 1)
(greater 10 1)
(greater 11 1)
(greater 12 1)
(greater 13 1)
(greater 14 1)
(greater 15 1)
(greater 16 1)
(greater 17 1)
(greater 18 1)
(greater 19 1)
(greater 20 1)
(greater 3 2)
(greater 4 2)
(greater 5 2)
(greater 6 2)
(greater 7 2)
(greater 8 2)
(greater 9 2)
(greater 10 2)
(greater 11 3)
(greater 12 3)
(greater 13 3)
(greater 14 3)
(greater 15 3)
(greater 16 3)
(greater 17 3)
(greater 18 3)
(greater 19 3)
(greater 20 3)
(greater 4 3)
(greater 5 3)
(greater 6 3)
(greater 7 3)
(greater 8 3)
(greater 9 3)
(greater 10 3)
(greater 11 3)
(greater 12 3)
(greater 13 3)
(greater 14 3)
(greater 15 3)
(greater 16 3)
(greater 17 3)
(greater 18 3)
(greater 19 3)
(greater 20 3)
(greater 5 4)
(greater 6 4)
(greater 7 4)
(greater 8 4)
(greater 9 4)
(greater 10 4)
(greater 11 4)
(greater 12 4)
(greater 13 4)
(greater 14 4)
(greater 15 4)
(greater 16 4)
(greater 17 4)
(greater 18 4)
(greater 19 4)
(greater 20 4)
(greater 6 5)
(greater 7 5)
(greater 8 5)
(greater 9 5)
(greater 10 5)
(greater 11 5)
(greater 12 5)
(greater 13 5)
(greater 14 5)
(greater 15 5)
(greater 16 5)
(greater 17 5)
(greater 18 5)
(greater 19 5)
(greater 20 5)
(greater 7 6)
(greater 8 6)
(greater 9 6)
(greater 10 6)
(greater 11 6)
(greater 12 6)
(greater 13 6)
(greater 14 6)
(greater 15 6)
(greater 16 6)
(greater 17 6)
(greater 18 6)
(greater 19 6)
(greater 20 6)
(greater 8 7)
(greater 9 7)
(greater 10 7)
(greater 11 7)
(greater 12 7)
(greater 13 7)
(greater 14 7)
(greater 15 7)
(greater 16 7)
(greater 17 7)
(greater 18 7)
(greater 19 7)
(greater 20 7)
(greater 9 8)
(greater 10 8)
(greater 11 8)
(greater 12 8)
(greater 13 8)
(greater 14 8)
(greater 15 8)
(greater 16 8)
(greater 17 8)
(greater 18 8)
(greater 19 8)
(greater 20 8)
(greater 10 9)
(greater 11 9)
(greater 12 9)
(greater 13 9)
(greater 14 9)
(greater 15 9)
(greater 16 9)
(greater 17 9)
(greater 18 9)
(greater 19 9)
(greater 20 9)
(greater 11 10)
(greater 12 10)
(greater 13 10)
(greater 14 10)
(greater 15 10)
(greater 16 10)
(greater 17 10)
(greater 18 10)
(greater 19 10)
(greater 20 10)
(greater 12 11)
(greater 13 11)
(greater 14 11)
(greater 15 11)
(greater 16 11)
(greater 17 11)
(greater 18 11)
(greater 19 11)
(greater 20 11)
(greater 13 12)
(greater 14 12)
(greater 15 12)
(greater 16 12)
(greater 17 12)
(greater 18 12)
(greater 19 12)
(greater 20 12)
(greater 14 13)
(greater 15 13)
(greater 16 13)
(greater 17 13)
(greater 18 13)
(greater 19 13)
(greater 20 13)
(greater 15 14)
(greater 16 14)
(greater 17 14)
(greater 18 14)
(greater 19 14)
(greater 20 14)
(greater 16 15)
(greater 17 15)
(greater 18 15)
(greater 19 15)
(greater 20 15)
(greater 17 16)
(greater 18 16)
(greater 19 16)
(greater 20 16)
(greater 18 17)
(greater 19 17)
(greater 20 17)
(greater 19 18)
(greater 20 18)
(greater 20 19)


(succ 1 2) (succ 2 3) (succ 3 4) (succ 4 5) (succ 5 6)
(x 1) (x 2) (x 3) (x 4)
(y 1) (y 2) (y 3) (y 4) (y 5) (y 6)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;




