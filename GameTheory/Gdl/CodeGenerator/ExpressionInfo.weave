@model ExpressionInfo
{{if model is ObjectInfo objectInfo}}
    {{if objectInfo.ReturnType is ObjectType && objectInfo.Value is string}}
        private static readonly {{: objectInfo.ReturnType}} {{: objectInfo.Id}} = {{= ToLiteral(objectInfo.Value)}};

    {{elif objectInfo.ReturnType == ObjectType.Instance}}
        private static readonly object {{: objectInfo.Id}} = new object();

    {{else}}
        #error Unsupported object expression {{: objectInfo.Id}}: {{: objectInfo.ReturnType}}

    {{/if}}
{{elif model is RelationInfo relationInfo}}
    private {{: relationInfo.ReturnType}} {{: relationInfo.Id}}({{each arg in relationInfo.Arguments}}{{: arg.ReturnType}} {{: arg}}{{delimit}}, {{/each}})
    {
        return false;
    }

{{elif model is LogicalInfo logicalInfo}}
    private {{: logicalInfo.ReturnType}} {{: logicalInfo.Id}}()
    {
        return false;
    }

{{else}}
    #error Unsupported expression {{= model}}: {{= model.GetType()}}

{{/if}}
